################################################################################
# AUTOGENERATED using openmapflow generate
################################################################################
name: forest-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - 'forest-example/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: forest-example
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - run: pip install -r requirements.txt

    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Run data pipeline
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: | 
        dvc pull -f
        openmapflow create-datasets --non-interactive
        dvc commit -f
        dvc push
    - name: Push automated dataset updates
      run: | 
        git config --global user.name 'Dataset bot'
        git config --global user.email 'dataset-bot@users.noreply.github.com'
        git pull
        git add data
        git commit -m "Automated dataset updates" || echo "No updates to commit"
        git push
    - name: Integration test - Project
      run: |
        openmapflow cp templates/integration_test_project.py .
        python -m unittest integration_test_project.py

    - name: Integration test - Data integrity
      run: |
        openmapflow cp templates/integration_test_datasets.py .
        python -m unittest integration_test_datasets.py

    - name: Integration test - Train and evaluate
      run: |
        openmapflow cp templates/integration_test_train_evaluate.py .
        python -m unittest integration_test_train_evaluate.py
